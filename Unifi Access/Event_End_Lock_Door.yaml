blueprint:
  name: Lock Door After Event with Overlap Check and Input Text Keyword
  description: >
    Locks a door a specified duration after an event ends if no overlapping event is running
    and if the door keyword stored in the selected input_text entity is present.
    (This blueprint no longer checks for the word "canceled" in the event title.)
  domain: automation
  input:
    calendar_entity:
      name: Calendar Entity
      description: Select the calendar to monitor for events.
      selector:
        entity:
          domain: calendar
    lock_offset:
      name: Lock Offset
      description: The duration after an event's end when the door should be locked.
      default: "0:15:0"
      selector:
        duration: {}
    input_text_keyword:
      name: Door Keyword Input Text
      description: Select the input_text entity that stores the door keyword.
      selector:
        entity:
          domain: input_text
    door_lock_entity:
      name: Door Lock Entity
      description: The door lock to check. (Used for status checking.)
      selector:
        entity:
          domain: lock
    door_lock_rule_select:
      name: Door Lock Rule Select Entity
      description: The select entity that controls the door lock mode.
      selector:
        entity:
          domain: select
    notify_device:
      name: Notification Device
      description: Select the mobile device to send notifications to.
      selector:
        device:
          integration: mobile_app

trigger:
  - platform: calendar
    event: end
    entity_id: !input calendar_entity
    offset: !input lock_offset

condition:
  - condition: template
    value_template: >
      {# Retrieve upcoming event times from the selected calendar #}
      {% set upcoming_start = state_attr(!input calendar_entity, 'start_time') %}
      {% set upcoming_end = state_attr(!input calendar_entity, 'end_time') %}
      {# The condition passes if there is no overlapping event:
         either upcoming_start/end are undefined, or now is not between them. #}
      {{ upcoming_start is none or upcoming_end is none or not (
         now().replace(tzinfo=None) >= as_datetime(upcoming_start).replace(tzinfo=None) and
         now().replace(tzinfo=None) <= as_datetime(upcoming_end).replace(tzinfo=None)
      ) }}
  - condition: template
    value_template: "{{ states(!input input_text_keyword) != '' }}"

action:
  - service: select.select_option
    target:
      entity_id: !input door_lock_rule_select
    data:
      option: "reset"
  - service: notify.notify
    data:
      title: "Meeting Ended"
      message: "No overlapping event. Door is now locked."
    target:
      device_id: !input notify_device

mode: single
