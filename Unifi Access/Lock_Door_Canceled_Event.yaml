blueprint:
  name: Lock Door on Canceled or No Active Event with Full Keyword Check
  description: >
    Periodically checks the selected calendar. If the door is currently unlocked and either
    (a) an active event is present whose summary contains both the cancellation keyword (default "canceled")
    and the door keyword (stored in an input_text helper) as full words, or (b) no active event is detected,
    then the automation locks the door and sends a notification.
  domain: automation
  input:
    calendar_entity:
      name: Calendar Entity
      description: Select the calendar to monitor for events.
      selector:
        entity:
          domain: calendar
    cancellation_keyword:
      name: Cancellation Keyword
      description: Enter the keyword that indicates an event is canceled.
      default: "canceled"
      selector:
        text: {}
    door_keyword_input:
      name: Door Keyword Input Text
      description: >
        Select the input_text entity that stores the door keyword.
        The current state of this helper will be checked as a full word in the event title.
      default: "*"
      selector:
        entity:
          domain: input_text
    door_lock_entity:
      name: Door Lock Entity
      description: The door lock to check. The automation will only lock the door if it's currently unlocked.
      selector:
        entity:
          domain: lock
    door_lock_rule_select:
      name: Door Lock Rule Select Entity
      description: The select entity that controls the door lock mode.
      selector:
        entity:
          domain: select
    notify_device:
      name: Notification Device
      description: Select the mobile device to send notifications to.
      selector:
        device:
          integration: mobile_app

trigger:
  - platform: time_pattern
    minutes: "/1"

condition:
  - condition: state
    entity_id: !input door_lock_entity
    state: "unlocked"
  - condition: template
    value_template: >
      {% set start_time = state_attr(!input calendar_entity, 'start_time') %}
      {% set end_time = state_attr(!input calendar_entity, 'end_time') %}
      {% set now_naive = now().replace(tzinfo=None) %}
      {% if start_time and end_time %}
        {% set event_active = now_naive >= as_datetime(start_time).replace(tzinfo=None) and now_naive <= as_datetime(end_time).replace(tzinfo=None) %}
      {% else %}
        {% set event_active = false %}
      {% endif %}
      {% set message = (state_attr(!input calendar_entity, 'message') | default('')) | lower %}
      {% set cancel_kw = (!input cancellation_keyword) | lower %}
      {% set door_kw = states(!input door_keyword_input) | lower %}
      {% if event_active %}
        {{ (message | regex_search('\\b' ~ cancel_kw ~ '\\b')) and (message | regex_search('\\b' ~ door_kw ~ '\\b')) }}
      {% else %}
        true
      {% endif %}

action:
  - service: select.select_option
    target:
      entity_id: !input door_lock_rule_select
    data:
      option: "reset"
  - service: notify.notify
    data:
      title: "Canceled/No Event: Door Locked"
      message: "The door has been locked because either a canceled event was detected or there is no active event."
    target:
      device_id: !input notify_device

mode: single
