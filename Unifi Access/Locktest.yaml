alias: Lock Door on Canceled or No Active Event (8 Hour Window)
description: ""
trigger:
  - platform: time_pattern
    minutes: "/{{ input.check_frequency }}"
action:
  # Retrieve events for the next 8 hours and store the response in "event_list"
  - service: calendar.get_events
    target:
      entity_id: !input calendar_entity
    data:
      duration:
        hours: 8
        minutes: 0
        seconds: 0
    response_variable: event_list
  # Only proceed if the door is currently unlocked.
  - condition: state
    entity_id: !input door_lock_entity
    state: "unlocked"
  # Process the event_list
  - condition: template
    value_template: >
      {% set now_naive = now().replace(tzinfo=None) %}
      {% set cancel_kw = input.cancellation_keyword | lower %}
      {% set door_kw = states(input.door_keyword_input) | lower %}
      {% set cal_id = input.calendar_entity %}
      {% set valid_active = false %}
      {% if event_list and event_list[cal_id] and event_list[cal_id].events %}
        {% for event in event_list[cal_id].events %}
          {% set event_start = as_datetime(event.start).replace(tzinfo=None) %}
          {% set event_end = as_datetime(event.end).replace(tzinfo=None) %}
          {% if now_naive >= event_start and now_naive <= event_end %}
            {% if (event.summary | lower).find(cancel_kw) == -1 and (event.summary | regex_search('\\b' ~ door_kw ~ '\\b')) %}
              {% set valid_active = true %}
            {% endif %}
          {% endif %}
        {% endfor %}
      {% endif %}
      {{ not valid_active }}
  # If no valid active event is found, lock the door.
  - service: select.select_option
    target:
      entity_id: !input door_lock_rule_select
    data:
      option: "reset"
  - service: notify.notify
    data:
      title: "Lock Door: No Valid Active Event"
      message: "No valid active event detected (or all active events are canceled). Door is now locked."
    target:
      device_id: !input notify_device
mode: single
